// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2

package handler

import (
	"net/http"

	v1template "rank-master-back/internal/handler/v1/template"
	v1test "rank-master-back/internal/handler/v1/test"
	v1user "rank-master-back/internal/handler/v1/user"
	"rank-master-back/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				// 增加模板
				Method:  http.MethodPost,
				Path:    "/",
				Handler: v1template.AddTemplateHandler(serverCtx),
			},
		},
		rest.WithPrefix("/v1/template"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// kafka
				Method:  http.MethodGet,
				Path:    "/kafka",
				Handler: v1test.KafkaHandler(serverCtx),
			},
			{
				// ping
				Method:  http.MethodGet,
				Path:    "/ping",
				Handler: v1test.PingHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// 验证用户账号是否存在
				Method:  http.MethodGet,
				Path:    "/:rank_master_account",
				Handler: v1user.GetRankMasterAccountHandler(serverCtx),
			},
			{
				// 获取邮箱验证码
				Method:  http.MethodPost,
				Path:    "/email/code",
				Handler: v1user.GetEmailCodeHandler(serverCtx),
			},
			{
				// 登录
				Method:  http.MethodPost,
				Path:    "/login",
				Handler: v1user.LoginHandler(serverCtx),
			},
			{
				// 注册
				Method:  http.MethodPost,
				Path:    "/register",
				Handler: v1user.RegisterHandler(serverCtx),
			},
		},
		rest.WithPrefix("/v1/user"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// 用户信息
				Method:  http.MethodGet,
				Path:    "/user_info",
				Handler: v1user.UserInfoHandler(serverCtx),
			},
			{
				// 更新用户信息列表
				Method:  http.MethodPut,
				Path:    "/user_list",
				Handler: v1user.UserListHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithSignature(serverCtx.Config.Signature),
		rest.WithPrefix("/v1/user"),
	)
}
